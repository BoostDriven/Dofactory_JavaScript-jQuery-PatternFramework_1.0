<!doctype html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Model View Design Patterns</title>
    <link rel="shortcut icon" href='../img/favicon.ico' />
    <link href='../css/bootstrap.css' rel="stylesheet" />
    <link href='../css/app.css' rel="stylesheet" />
    <link href='../css/google-code-prettify/prettify.css' rel="stylesheet" />

    <script src='../js/jquery.js' type="text/javascript" ></script>
    <script src='../js/bootstrap.js' type="text/javascript" ></script>
    <script src='../js/app.js' type="text/javascript" ></script>

    <script src='../css/google-code-prettify/prettify.js' type="text/javascript"></script>
</head>
<body>
     <div class="navbar">
      <div class="navbar-inner">
        <div class="container">
          <a class="brand" style="padding-top:15px;" href='../index.htm'><img src='../img/js.png' alt="js" width="32" height="30" />
              &nbsp; JavaScript + jQuery Design Pattern Framework <sup>TM</sup>&nbsp; 2013
          </a>
        </div>
      </div>
    </div>

    <div class="container">
     <div class="row">
            <div class="span12" style="height:4px;background:darkorchid;"></div>
     </div>

     <div class="row">
       <div class="span12">
         <ul class="breadcrumb">
           <li><a href='../index.htm'>Home</a> <span class="divider">/</span></li>
           <li class="active">Model View</li>
         </ul>
        </div>
      </div>
      <br />
        


      <div class="row">
      <div class="span7"><h2 style="color:#4e3825;">Model View Design Patterns</h2>
      <div class="pattern-top">
        <p>
            The first ever documented pattern was MVC (Model View Controller). 
            Two more recent Model View patterns are MVP (Model View Presenter) and MVVM (Model View ViewModel).<br /><br />
            Here we review these important patterns and their use in modern JavaScript development. 
        </p>
         </div>
      
      </div>
      <div class="span3">
       &nbsp;&nbsp;&nbsp;<a class='js' href="javascript:void(0);" onclick="return openPdf('ModelViewPatterns');">Model View Patterns Guide</a>
      </div>
      <div class="span2">
        <img src="../img/jspattern.jpg" style="width:140px;height:140px;" alt="" />
        <br />
        <div class="back" style="padding:10px 0 0 18px;">
            <i class="icon-hand-left" style="margin:2px 0 0 0;"></i>&nbsp;&nbsp;<a href='../index.htm'>back to home</a>
        </div>
      </div>
    </div>

      <br /><br />
      <div class="row">
        <div class="span12">
         
        </div>
      </div>

      <br />
      <br />

      <div class="row">
       <div class="span9">
       <table class="table">
         <tr>
            <th colspan="2"  style="background-color:beige;">&nbsp;&nbsp;<b>Model View Patterns</b></th>
         </tr>
        <tr>
            <td class="mv-col">&nbsp;&nbsp;&nbsp;<a href='introduction.htm' >Introduction</a></td>
            <td style="line-height:19px;">Introduction to Model View Patterns. </td>
        </tr>
        <tr>
            <td class="mv-col">&nbsp;&nbsp;&nbsp;<a href='mvc.htm' >MVC</a></td>
            <td style="line-height:19px;"><strong>Model View Controller</strong>. Separates an application in three logical components: Model, View, and Controller. The Model represents the domain specific business data, usually coming from a database. 
                  The View is the user interface with which the user interacts. The Controller receives events from the View and responds by updating the data in the Model, which, 
                  in turn, notifies the View of the data changes. 
            </td>
        </tr>
        <tr>
            <td>&nbsp;&nbsp;&nbsp;<a href='mvp.htm' >MVP</a></td>
            <td style="line-height:19px;"><strong>Model View Presenter</strong>. A modification of MVC. The Controller is named Presenter as it takes a more active role in updating the View.
                In MVP the Model and View do not communicate directly with each other; all communication goes via the Presenter.
            </td>
        </tr>
        <tr>
            <td>&nbsp;&nbsp;&nbsp;<a href='mvvm.htm' >MVVM</a></td>
            <td style="line-height:19px;"><strong>Model View ViewModel</strong>. A further refinement of MVP with the addition of data binding. 
                The Presenter is named ViewModel gets the data from the Model and presents it to the View.
                Data binding is used to synchronize data changes between the View and the ViewModel. The ViewModel updates the Model as needed.
            </td>
        </tr>
        <tr>
            <td>&nbsp;&nbsp;&nbsp;<a href='mv.htm'>MV Frameworks</a></td>
            <td style="line-height:19px;">
                An overview of Model View JavaScript Frameworks.
            </td>
        </tr>
    </table>
    
       </div>
      </div>

      <br /><br />
      <hr />

<div style="height:150px;">&nbsp;</div>
  



      <br /><br />

      <hr />
      <div class="footer">
        <p class="pull-right"><a id="totop" href="#">Back to top</a></p>
        <p style="font-size:11pt;">Copyright &#169; 2013. Data & Object Factory, LLC. www.dofactory.com. All rights reserved.</p>
      </div>
      <br />
   </div>

<script type="text/javascript">

    $(function() {
        prettyPrint();

        // animates page to scroll to top
        $('#totop').on('click', function () {
            $("html, body").animate({ scrollTop: 0 }, 500);
            return false;
        });
    });

</script>
</body>
</html>
